
@{
    ViewBag.Title = "Chart";
    Layout = "~/Views/Shared/_Aminlayout.cshtml";

    List<string> month = (List<string>)ViewData["month"];

    var month2 = string.Join(",", month);

    List<long> Earn = (List<long>)ViewData["Earn"];
    string Earn2 = string.Join(",", Earn);
    List<string> type = (List<string>)ViewData["type"];

    var type2 = string.Join(",", type);

    List<float> percent = (List<float>)ViewData["percent"];
    string percent2 = string.Join(",", percent);
    DateTime StartSell = (DateTime)ViewData["StartSell"];
    DateTime Start = (DateTime)ViewData["start"];
    DateTime End = (DateTime)ViewData["end"];
    string Now = @String.Format("{0:yyyy-MM-dd}", DateTime.UtcNow.AddHours(7));

}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<div class="row">

    <div class="col-xl-8 col-lg-7">

        <!-- Area Chart -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">


                <div class="gl-inline">
                    <h6 class="m-0 font-weight-bold text-primary">Thống kê doanh thu </h6>
                    <p>&nbsp;&nbsp;&nbsp;</p>

                    <select class="select-box select-box--primary-style u-w-30" id="type">

                        <option typeselect="month" selected>Thống kê theo tháng</option>

                        
                        <option typeselect="day">Thống kê theo ngày</option>



                    </select>
                    <p>&nbsp;&nbsp;&nbsp;</p>


                    <div id="select_content" class="gl-inline">
                    <select class="select-box select-box--primary-style u-w-30" id="startmonth">
                        @for (DateTime i = End.AddMonths(-1); (i.Month> Start.Month)|(i.Year>Start.Year); i = i.AddMonths(-1))
                        {
                            <option month=@i.Month year=@i.Year>Từ tháng @i.Month.ToString() - @i.Year.ToString()</option>
                        }
                        <option month=@Start.Month year=@Start.Year selected>Từ tháng @Start.Month.ToString() - @Start.Year.ToString()</option>
                        @for (DateTime i = Start.AddMonths(-1); i> StartSell; i = i.AddMonths(-1))
                        {
                            <option month=@i.Month year=@i.Year>Từ tháng @i.Month.ToString() - @i.Year.ToString()</option>
                        }


                    </select>
                    <p>&nbsp;&nbsp;&nbsp;</p>

                    <select style="display:inline-block" class="select-box select-box--primary-style u-w-30" id="endmonth">
                        
                        <option month=@End.Month year=@End.Year selected>Đến tháng @End.Month.ToString() - @End.Year.ToString()</option>
                        @for (DateTime i = End.AddMonths(-1); (i.Month > Start.Month) | (i.Year > Start.Year); i = i.AddMonths(-1))
                        {
                            <option month=@i.Month year=@i.Year>Đến tháng @i.Month.ToString() - @i.Year.ToString()</option>
                        }


                    </select>
                        </div>




                </div>
            </div>

            <div id="chartinsert">
                <div class="card-body">
                    <div class="chart-area">
                        <canvas id="myAreaChart"></canvas>
                    </div>

                </div>

            </div>
        </div>



    </div>
    
    <!-- Donut Chart -->
    <div class="col-xl-4 col-lg-5">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Thống kê chi tiết</h6>
            </div>
            <!-- Card Body -->
            <div id="chartinsert3">
                <div class="card-body">
                    <div class="chart-pie pt-4">
                        <canvas id="myPieChart"></canvas>
                    </div>

                </div>
                </div>
            </div>
        </div>
    <div class="col-xl-8 col-lg-7">

        <!-- Area Chart -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">


                <div div class="gl-inline">
                    <h6 class="m-0 font-weight-bold text-primary">Thống kê doanh thu </h6>
                    




                </div>
            </div>

            <div id="chartinsert2">
                <div class="card-body">
                    <div class="chart-area">
                        <canvas id="myBarChart"></canvas>
                    </div>

                </div>

            </div>
        </div>



    </div>
</div>


<div id="month" hidden>
    <select class="select-box select-box--primary-style u-w-30" id="startmonth2" onchange="startmonth2()">
        @for (DateTime i = End.AddMonths(-1); (i.Month > Start.Month) | (i.Year > Start.Year); i = i.AddMonths(-1))
        {
            <option month=@i.Month year=@i.Year>Từ tháng @i.Month.ToString() - @i.Year.ToString()</option>
        }
        <option month=@Start.Month year=@Start.Year selected>Từ tháng @Start.Month.ToString() - @Start.Year.ToString()</option>
        @for (DateTime i = Start.AddMonths(-1); i > StartSell; i = i.AddMonths(-1))
        {
            <option month=@i.Month year=@i.Year>Từ tháng @i.Month.ToString() - @i.Year.ToString()</option>
        }


    </select>
    <p>&nbsp;&nbsp;&nbsp;</p>

    <select style="display:inline-block" class="select-box select-box--primary-style u-w-30" id="endmonth2" onchange="endmonth2()">

        <option month=@End.Month year=@End.Year selected>Đến tháng @End.Month.ToString() - @End.Year.ToString()</option>
        @for (DateTime i = End.AddMonths(-1); (i.Month > Start.Month) | (i.Year > Start.Year); i = i.AddMonths(-1))
        {
            <option month=@i.Month year=@i.Year>Đến tháng @i.Month.ToString() - @i.Year.ToString()</option>
        }


    </select>
</div>
<div id="day" hidden>
    <label class = "gl-label" >Từ: </label>
    <input onchange="daystart()" type="text" id="daystart" onfocus="(this.type='date')" onblur="(this.type='text')" class="input-text input-text--primary-style" min="@String.Format("{0:yyyy-MM-dd}",Start)" max="@String.Format("{0:yyyy-MM-dd}",End.AddDays(-1))" value=@String.Format("{0:yyyy-MM-dd}",End.AddDays(-30))>
    <p>&nbsp;&nbsp;&nbsp;</p>
    <div id="enddayt" class="gl-inline">
    <label class = "gl-label" >Đến: </label>
    <input onchange="dayend()"  type="text" id="dayend" onfocus="(this.type='date')" onblur="(this.type='text')" class="input-text input-text--primary-style" min="@String.Format("{0:yyyy-MM-dd}", End.AddDays(-29))" max="@String.Format("{0:yyyy-MM-dd}", End)" value=@String.Format("{0:yyyy-MM-dd}",End)>
        </div>
</div>

<script src="~/AssetAdmin/vendor/chart.js/Chart.min.js"></script>


<script>

        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#858796';

        function number_format(number, decimals, dec_point, thousands_sep) {

            // *     example: number_format(1234.56, 2, ',', ' ');
            // *     return: '1 234,56'
            number = (number + '').replace(',', '').replace(' ', '');
            var n = !isFinite(+number) ? 0 : +number,
                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                s = '',
                toFixedFix = function (n, prec) {
                    var k = Math.pow(10, prec);
                    return '' + Math.round(n * k) / k;
                };
            // Fix for IE parseFloat(0.55).toFixed(0) = 0;
            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
            if (s[0].length > 3) {
                s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
            }
            if ((s[1] || '').length < prec) {
                s[1] = s[1] || '';
                s[1] += new Array(prec - s[1].length + 1).join('0');
            }
            return s.join(dec);
        }

        // Area Chart Example
    var ctx = document.getElementById("myAreaChart");
    var label1 = new Array();
    var text = "@month2";
    var label = text.split(",");
    for (let i =0; i <label.length; i++) {

        label1.push(""+label[i]+"");
    }
    var labelt1 = new Array();
    var text2 = "@type2";
    var labelt = text2.split(",");
    for (let i =0; i <labelt.length; i++) {

        labelt1.push(""+labelt[i]+"");
    }




        var myLineChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: label1,
                datasets: [{
                    label: "Doanh thu",
                    lineTension: 0.3,
                    backgroundColor: "rgba(78, 115, 223, 0.05)",
                    borderColor: "rgba(78, 115, 223, 1)",
                    pointRadius: 3,
                    pointBackgroundColor: "rgba(78, 115, 223, 1)",
                    pointBorderColor: "rgba(78, 115, 223, 1)",
                    pointHoverRadius: 3,
                    pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                    pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                    pointHitRadius: 10,
                    pointBorderWidth: 2,
                    data: [@Earn2],
                }],
            },
            options: {
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },
                scales: {
                    xAxes: [{
                        time: {
                            unit: 'date'
                        },
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            maxTicksLimit: 7
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            maxTicksLimit: 5,
                            padding: 10,
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return number_format(value) +" đ";
                            }
                        },
                        gridLines: {
                            color: "rgb(234, 236, 244)",
                            zeroLineColor: "rgb(234, 236, 244)",
                            drawBorder: false,
                            borderDash: [2],
                            zeroLineBorderDash: [2]
                        }
                    }],
                },
                legend: {
                    display: false
                },
                tooltips: {
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    titleMarginBottom: 10,
                    titleFontColor: '#6e707e',
                    titleFontSize: 14,
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    intersect: false,
                    mode: 'index',
                    caretPadding: 10,
                    callbacks: {
                        label: function (tooltipItem, chart) {
                            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                            return datasetLabel + ': ' + number_format(tooltipItem.yLabel) +" đ";
                        }
                    }
                }
            }
        });
    $('#type').on('change', function () {
        run_waitMe('#chartinsert');
        run_waitMe('#chartinsert2');
        run_waitMe('#chartinsert3');
        var type = $('option:selected', '#type').attr('typeselect');

        if (type == "day") {
            
            $('#select_content').html($('#day').html());
            
            $.ajax({
                type: 'POST',
                data: {},
                url: '/Admin/ChartDay',
                success: function (ketqua) {
                    $('#chartinsert').html(ketqua);
                    stop_waitMe('#chartinsert');
                }
            });
            $.ajax({
                type: 'POST',
                data: {},
                url: '/Admin/ChartDay2',
                success: function (ketqua) {
                    $('#chartinsert2').html(ketqua);
                    stop_waitMe('#chartinsert2');
                }
            });
            $.ajax({
                type: 'POST',
                data: {},
                url: '/Admin/ChartDay3',
                success: function (ketqua) {
                    $('#chartinsert3').html(ketqua);
                    stop_waitMe('#chartinsert3');
                }
            });
        }
        else if (type == "month") {
            $('#select_content').html($('#month').html());
            $.ajax({
                type: 'POST',
                data: {},
                url: '/Admin/Chart2',
                success: function (ketqua) {
                    $('#chartinsert').html(ketqua);
                    stop_waitMe('#chartinsert');
                }
            });
            $.ajax({
                type: 'POST',
                data: {},
                url: '/Admin/Chart3',
                success: function (ketqua) {
                    $('#chartinsert2').html(ketqua);
                    stop_waitMe('#chartinsert2');
                }
            });
            $.ajax({
                type: 'POST',
                data: {},
                url: '/Admin/Chart4',
                success: function (ketqua) {
                    $('#chartinsert3').html(ketqua);
                    stop_waitMe('#chartinsert3');
                }
            });
           
        }
    });
    function daystart() {
        run_waitMe('#chartinsert');
        run_waitMe('#chartinsert2');
        run_waitMe('#chartinsert3');
        run_waitMe('#enddayt');
        var daystart = $('#daystart').val();

        var dayend = $('#dayend').val();

        var startday = new Date(daystart);
        var endday = new Date(dayend);
        var check = 0;
        if (startday >= endday) {


                var check = 1;
                var dayend= "@Now";

        }
        $.ajax({
            type: 'POST',
            data: { startday:daystart,endday:dayend,check:check},
            url: '/Admin/Day',
            success: function (ketqua) {
                $('#enddayt').html(ketqua);
                stop_waitMe('#enddayt');
            }
        });
        $.ajax({
            type: 'POST',
            data: { daystart: daystart,dayend:dayend },
            url: '/Admin/ChartDay',
            success: function (ketqua) {
                $('#chartinsert').html(ketqua);
                stop_waitMe('#chartinsert');
            }
        });
        $.ajax({
            type: 'POST',
            data: { daystart: daystart, dayend: dayend },
            url: '/Admin/ChartDay2',
            success: function (ketqua) {
                $('#chartinsert2').html(ketqua);
                stop_waitMe('#chartinsert2');
            }
        });
        $.ajax({
            type: 'POST',
            data: { daystart: daystart, dayend: dayend },
            url: '/Admin/ChartDay3',
            success: function (ketqua) {
                $('#chartinsert3').html(ketqua);
                stop_waitMe('#chartinsert3');
            }
        });
    };
    function dayend() {
        run_waitMe('#chartinsert');
        run_waitMe('#chartinsert2');
        run_waitMe('#chartinsert3');
        
        var daystart = $('#daystart').val();
        
        var dayend = $('#dayend').val();
        
        $.ajax({
            type: 'POST',
            data: { daystart: daystart, dayend: dayend },
            url: '/Admin/ChartDay',
            success: function (ketqua) {
                $('#chartinsert').html(ketqua);
                stop_waitMe('#chartinsert');
            }
        });
        $.ajax({
            type: 'POST',
            data: { daystart: daystart, dayend: dayend },
            url: '/Admin/ChartDay2',
            success: function (ketqua) {
                $('#chartinsert2').html(ketqua);
                stop_waitMe('#chartinsert2');
            }
        });
        $.ajax({
            type: 'POST',
            data: { daystart: daystart, dayend: dayend },
            url: '/Admin/ChartDay3',
            success: function (ketqua) {
                $('#chartinsert3').html(ketqua);
                stop_waitMe('#chartinsert3');
            }
        });
    };
    $('#startmonth').on('change', function () {
        run_waitMe('#chartinsert');
        run_waitMe('#chartinsert2');
        run_waitMe('#chartinsert3');
        run_waitMe('#endmonth');
        var startmonth = $('option:selected', '#startmonth').attr('month');
        var startyear = $('option:selected', '#startmonth').attr('year');
        var check = 0;
        var endmonth = $('option:selected', '#endmonth').attr('month');
        var endyear = $('option:selected', '#endmonth').attr('year');

        if (startyear >= endyear) {
            if (!((startyear == endyear) & (startmonth < endmonth))) {

                var check = 1;
                endmonth = @DateTime.UtcNow.Month;
                endyear = @DateTime.UtcNow.Year;
            }
        }
        $.ajax({
            type: 'POST',
            data: { startmonth: startmonth, startyear: startyear, check: check, endmonth: $('option:selected', '#endmonth').attr('month'), endyear: $('option:selected', '#endmonth').attr('year') },
            url: '/Admin/Month',
            success: function (ketqua) {
                $('#endmonth').html(ketqua);
                stop_waitMe('#endmonth');
            }
        });



       

        $.ajax({
            type: 'POST',
            data: { startmonth: startmonth, startyear: startyear,endmonth:endmonth,endyear:endyear },
            url: '/Admin/Chart2',
            success: function (ketqua) {
                $('#chartinsert').html(ketqua);
                stop_waitMe('#chartinsert');
            }
        });
        $.ajax({
            type: 'POST',
            data: { startmonth: startmonth, startyear: startyear, endmonth: endmonth, endyear: endyear},
            url: '/Admin/Chart3',
            success: function (ketqua) {
                $('#chartinsert2').html(ketqua);
                stop_waitMe('#chartinsert2');
            }
        });
        $.ajax({
            type: 'POST',
            data: { startmonth: startmonth, startyear: startyear, endmonth: endmonth, endyear: endyear },
            url: '/Admin/Chart4',
            success: function (ketqua) {
                $('#chartinsert3').html(ketqua);
                stop_waitMe('#chartinsert3');
            }
        });

    });

    $('#endmonth').on('change', function () {

        run_waitMe('#chartinsert');
        run_waitMe('#chartinsert2');
        run_waitMe('#chartinsert3');
        var startmonth = $('option:selected', '#startmonth').attr('month');
        var startyear = $('option:selected', '#startmonth').attr('year');
        var endmonth = $('option:selected', '#endmonth').attr('month');
        var endyear = $('option:selected', '#endmonth').attr('year');

        $.ajax({
            type: 'POST',
            data: { startmonth: startmonth, startyear: startyear, endmonth: endmonth, endyear: endyear },
            url: '/Admin/Chart2',
            success: function (ketqua) {
                $('#chartinsert').html(ketqua);
                stop_waitMe('#chartinsert');
            }
        });
        $.ajax({
            type: 'POST',
            data: { startmonth: startmonth, startyear: startyear, endmonth: endmonth, endyear: endyear },
            url: '/Admin/Chart3',
            success: function (ketqua) {
                $('#chartinsert2').html(ketqua);
                stop_waitMe('#chartinsert2');
            }
        });
        $.ajax({
            type: 'POST',
            data: { startmonth: startmonth, startyear: startyear, endmonth: endmonth, endyear: endyear },
            url: '/Admin/Chart4',
            success: function (ketqua) {
                $('#chartinsert3').html(ketqua);
                stop_waitMe('#chartinsert3');
            }
        });

    });
    function startmonth2() {

        run_waitMe('#chartinsert');
        run_waitMe('#chartinsert2');
        run_waitMe('#chartinsert3');
        run_waitMe('#endmonth2');
        var startmonth = $('option:selected', '#startmonth2').attr('month');
        var startyear = $('option:selected', '#startmonth2').attr('year');
        var check = 0;
        var endmonth = $('option:selected', '#endmonth2').attr('month');
        var endyear = $('option:selected', '#endmonth2').attr('year');
        console.log(startmonth);
        if (startyear >= endyear) {
            if (!((startyear == endyear) & (startmonth < endmonth))) {

                var check = 1;
                endmonth = @DateTime.UtcNow.Month;
                endyear = @DateTime.UtcNow.Year;
            }
        }
        $.ajax({
            type: 'POST',
            data: { startmonth: startmonth, startyear: startyear, check: check, endmonth: $('option:selected', '#endmonth2').attr('month'), endyear: $('option:selected', '#endmonth2').attr('year') },
            url: '/Admin/Month',
            success: function (ketqua) {
                $('#endmonth2').html(ketqua);
                stop_waitMe('#endmonth2');
            }
        });





        $.ajax({
            type: 'POST',
            data: { startmonth: startmonth, startyear: startyear, endmonth: endmonth, endyear: endyear },
            url: '/Admin/Chart2',
            success: function (ketqua) {
                $('#chartinsert').html(ketqua);
                stop_waitMe('#chartinsert');
            }
        });
        $.ajax({
            type: 'POST',
            data: { startmonth: startmonth, startyear: startyear, endmonth: endmonth, endyear: endyear },
            url: '/Admin/Chart3',
            success: function (ketqua) {
                $('#chartinsert2').html(ketqua);
                stop_waitMe('#chartinsert2');
            }
        });
        $.ajax({
            type: 'POST',
            data: { startmonth: startmonth, startyear: startyear, endmonth: endmonth, endyear: endyear },
            url: '/Admin/Chart4',
            success: function (ketqua) {
                $('#chartinsert3').html(ketqua);
                stop_waitMe('#chartinsert3');
            }
        });

    };

    function endmonth2() {

        run_waitMe('#chartinsert');
        run_waitMe('#chartinsert2');
        run_waitMe('#chartinsert3');
        var startmonth = $('option:selected', '#startmonth2').attr('month');
        var startyear = $('option:selected', '#startmonth2').attr('year');
        var endmonth = $('option:selected', '#endmonth2').attr('month');
        var endyear = $('option:selected', '#endmonth2').attr('year');

        $.ajax({
            type: 'POST',
            data: { startmonth: startmonth, startyear: startyear, endmonth: endmonth, endyear: endyear },
            url: '/Admin/Chart2',
            success: function (ketqua) {
                $('#chartinsert').html(ketqua);
                stop_waitMe('#chartinsert');
            }
        });
        $.ajax({
            type: 'POST',
            data: { startmonth: startmonth, startyear: startyear, endmonth: endmonth, endyear: endyear },
            url: '/Admin/Chart3',
            success: function (ketqua) {
                $('#chartinsert2').html(ketqua);
                stop_waitMe('#chartinsert2');
            }
        });
        $.ajax({
            type: 'POST',
            data: { startmonth: startmonth, startyear: startyear, endmonth: endmonth, endyear: endyear },
            url: '/Admin/Chart4',
            success: function (ketqua) {
                $('#chartinsert3').html(ketqua);
                stop_waitMe('#chartinsert3');
            }
        });

    };
    var ctx = document.getElementById("myBarChart");
    var myBarChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: label1,
            datasets: [{
                label: "Doanh thu",
                backgroundColor: "#4e73df",
                hoverBackgroundColor: "#2e59d9",
                borderColor: "#4e73df",
                data: [@Earn2],
            }],
        },
        options: {
            maintainAspectRatio: false,
            layout: {
                padding: {
                    left: 10,
                    right: 25,
                    top: 25,
                    bottom: 0
                }
            },
            scales: {
                xAxes: [{
                    time: {
                        unit: 'month'
                    },
                    gridLines: {
                        display: false,
                        drawBorder: false
                    },
                    ticks: {
                        maxTicksLimit: 6
                    },
                    maxBarThickness: 25,
                }],
                yAxes: [{
                    ticks: {
                        min: 0,

                        maxTicksLimit: 5,
                        padding: 10,
                        // Include a dollar sign in the ticks
                        callback: function (value, index, values) {
                            return number_format(value)+' đ';
                        }
                    },
                    gridLines: {
                        color: "rgb(234, 236, 244)",
                        zeroLineColor: "rgb(234, 236, 244)",
                        drawBorder: false,
                        borderDash: [2],
                        zeroLineBorderDash: [2]
                    }
                }],
            },
            legend: {
                display: false
            },
            tooltips: {
                titleMarginBottom: 10,
                titleFontColor: '#6e707e',
                titleFontSize: 14,
                backgroundColor: "rgb(255,255,255)",
                bodyFontColor: "#858796",
                borderColor: '#dddfeb',
                borderWidth: 1,
                xPadding: 15,
                yPadding: 15,
                displayColors: false,
                caretPadding: 10,
                callbacks: {
                    label: function (tooltipItem, chart) {
                        var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                        return datasetLabel + ': ' + number_format(tooltipItem.yLabel) + ' đ';
                    }
                }
            },
        }
    });
    var ctx = document.getElementById("myPieChart");
    var myPieChart = new Chart(ctx, {
        type: 'doughnut',
        data: {
            labels: labelt1,
            datasets: [{
                data: [@percent2],
                backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc'],
                hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf'],
                hoverBorderColor: "rgba(234, 236, 244, 1)",
            }],
        },
        options: {
            maintainAspectRatio: false,
            tooltips: {
                backgroundColor: "rgb(255,255,255)",
                bodyFontColor: "#858796",
                borderColor: '#dddfeb',
                borderWidth: 1,
                xPadding: 15,
                yPadding: 15,
                displayColors: false,
                caretPadding: 10,
            },
            legend: {
                display: false
            },
            cutoutPercentage: 80,
        },
    });

</script>

